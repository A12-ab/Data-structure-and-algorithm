class Solution {
public:
    int subarraySum(vector<int>& ar, int k) {
        int cnt=0;
        int n=ar.size();
        unordered_map<int,int>mp;
        vector<int>prefixSum(n,0);
        prefixSum[0]=ar[0];
        for(int i=1; i<n; i++){
            prefixSum[i]=prefixSum[i-1]+ar[i];

        }
        for(int i=0; i<n; i++){
            if(prefixSum[i]==k){
                cnt++;
            }
            int val=prefixSum[i]-k;
            if(mp.find(val) != mp.end()){
                cnt+=mp[val];
            }
            if(mp.find(prefixSum[i])==mp.end()){
                mp[prefixSum[i]]=0;
            }
            mp[prefixSum[i]]++;
        }
        
        
        return cnt;
        
    }
};